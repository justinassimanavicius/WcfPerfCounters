//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStockMarket")]
    public interface IStockMarket {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/getStockValue", ReplyAction="http://tempuri.org/IStockMarket/getStockValueResponse")]
        double getStockValue(string strSymbol);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockMarket/getStockValue", ReplyAction="http://tempuri.org/IStockMarket/getStockValueResponse")]
        System.IAsyncResult BegingetStockValue(string strSymbol, System.AsyncCallback callback, object asyncState);
        
        double EndgetStockValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/setStockValue", ReplyAction="http://tempuri.org/IStockMarket/setStockValueResponse")]
        double setStockValue(string strSymbol);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockMarket/setStockValue", ReplyAction="http://tempuri.org/IStockMarket/setStockValueResponse")]
        System.IAsyncResult BeginsetStockValue(string strSymbol, System.AsyncCallback callback, object asyncState);
        
        double EndsetStockValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/putStockValue", ReplyAction="http://tempuri.org/IStockMarket/putStockValueResponse")]
        double putStockValue(string strSymbol);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockMarket/putStockValue", ReplyAction="http://tempuri.org/IStockMarket/putStockValueResponse")]
        System.IAsyncResult BeginputStockValue(string strSymbol, System.AsyncCallback callback, object asyncState);
        
        double EndputStockValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockMarket/dumpStockValue", ReplyAction="http://tempuri.org/IStockMarket/dumpStockValueResponse")]
        double dumpStockValue(string strSymbol);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStockMarket/dumpStockValue", ReplyAction="http://tempuri.org/IStockMarket/dumpStockValueResponse")]
        System.IAsyncResult BegindumpStockValue(string strSymbol, System.AsyncCallback callback, object asyncState);
        
        double EnddumpStockValue(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockMarketChannel : Client.ServiceReference1.IStockMarket, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getStockValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getStockValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class setStockValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public setStockValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class putStockValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public putStockValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class dumpStockValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public dumpStockValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockMarketClient : System.ServiceModel.ClientBase<Client.ServiceReference1.IStockMarket>, Client.ServiceReference1.IStockMarket {
        
        private BeginOperationDelegate onBegingetStockValueDelegate;
        
        private EndOperationDelegate onEndgetStockValueDelegate;
        
        private System.Threading.SendOrPostCallback ongetStockValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginsetStockValueDelegate;
        
        private EndOperationDelegate onEndsetStockValueDelegate;
        
        private System.Threading.SendOrPostCallback onsetStockValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginputStockValueDelegate;
        
        private EndOperationDelegate onEndputStockValueDelegate;
        
        private System.Threading.SendOrPostCallback onputStockValueCompletedDelegate;
        
        private BeginOperationDelegate onBegindumpStockValueDelegate;
        
        private EndOperationDelegate onEnddumpStockValueDelegate;
        
        private System.Threading.SendOrPostCallback ondumpStockValueCompletedDelegate;
        
        public StockMarketClient() {
        }
        
        public StockMarketClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockMarketClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockMarketClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockMarketClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<getStockValueCompletedEventArgs> getStockValueCompleted;
        
        public event System.EventHandler<setStockValueCompletedEventArgs> setStockValueCompleted;
        
        public event System.EventHandler<putStockValueCompletedEventArgs> putStockValueCompleted;
        
        public event System.EventHandler<dumpStockValueCompletedEventArgs> dumpStockValueCompleted;
        
        public double getStockValue(string strSymbol) {
            return base.Channel.getStockValue(strSymbol);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegingetStockValue(string strSymbol, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetStockValue(strSymbol, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndgetStockValue(System.IAsyncResult result) {
            return base.Channel.EndgetStockValue(result);
        }
        
        private System.IAsyncResult OnBegingetStockValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSymbol = ((string)(inValues[0]));
            return this.BegingetStockValue(strSymbol, callback, asyncState);
        }
        
        private object[] OnEndgetStockValue(System.IAsyncResult result) {
            double retVal = this.EndgetStockValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetStockValueCompleted(object state) {
            if ((this.getStockValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getStockValueCompleted(this, new getStockValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getStockValueAsync(string strSymbol) {
            this.getStockValueAsync(strSymbol, null);
        }
        
        public void getStockValueAsync(string strSymbol, object userState) {
            if ((this.onBegingetStockValueDelegate == null)) {
                this.onBegingetStockValueDelegate = new BeginOperationDelegate(this.OnBegingetStockValue);
            }
            if ((this.onEndgetStockValueDelegate == null)) {
                this.onEndgetStockValueDelegate = new EndOperationDelegate(this.OnEndgetStockValue);
            }
            if ((this.ongetStockValueCompletedDelegate == null)) {
                this.ongetStockValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetStockValueCompleted);
            }
            base.InvokeAsync(this.onBegingetStockValueDelegate, new object[] {
                        strSymbol}, this.onEndgetStockValueDelegate, this.ongetStockValueCompletedDelegate, userState);
        }
        
        public double setStockValue(string strSymbol) {
            return base.Channel.setStockValue(strSymbol);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsetStockValue(string strSymbol, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsetStockValue(strSymbol, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndsetStockValue(System.IAsyncResult result) {
            return base.Channel.EndsetStockValue(result);
        }
        
        private System.IAsyncResult OnBeginsetStockValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSymbol = ((string)(inValues[0]));
            return this.BeginsetStockValue(strSymbol, callback, asyncState);
        }
        
        private object[] OnEndsetStockValue(System.IAsyncResult result) {
            double retVal = this.EndsetStockValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsetStockValueCompleted(object state) {
            if ((this.setStockValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.setStockValueCompleted(this, new setStockValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void setStockValueAsync(string strSymbol) {
            this.setStockValueAsync(strSymbol, null);
        }
        
        public void setStockValueAsync(string strSymbol, object userState) {
            if ((this.onBeginsetStockValueDelegate == null)) {
                this.onBeginsetStockValueDelegate = new BeginOperationDelegate(this.OnBeginsetStockValue);
            }
            if ((this.onEndsetStockValueDelegate == null)) {
                this.onEndsetStockValueDelegate = new EndOperationDelegate(this.OnEndsetStockValue);
            }
            if ((this.onsetStockValueCompletedDelegate == null)) {
                this.onsetStockValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsetStockValueCompleted);
            }
            base.InvokeAsync(this.onBeginsetStockValueDelegate, new object[] {
                        strSymbol}, this.onEndsetStockValueDelegate, this.onsetStockValueCompletedDelegate, userState);
        }
        
        public double putStockValue(string strSymbol) {
            return base.Channel.putStockValue(strSymbol);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginputStockValue(string strSymbol, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginputStockValue(strSymbol, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndputStockValue(System.IAsyncResult result) {
            return base.Channel.EndputStockValue(result);
        }
        
        private System.IAsyncResult OnBeginputStockValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSymbol = ((string)(inValues[0]));
            return this.BeginputStockValue(strSymbol, callback, asyncState);
        }
        
        private object[] OnEndputStockValue(System.IAsyncResult result) {
            double retVal = this.EndputStockValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnputStockValueCompleted(object state) {
            if ((this.putStockValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.putStockValueCompleted(this, new putStockValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void putStockValueAsync(string strSymbol) {
            this.putStockValueAsync(strSymbol, null);
        }
        
        public void putStockValueAsync(string strSymbol, object userState) {
            if ((this.onBeginputStockValueDelegate == null)) {
                this.onBeginputStockValueDelegate = new BeginOperationDelegate(this.OnBeginputStockValue);
            }
            if ((this.onEndputStockValueDelegate == null)) {
                this.onEndputStockValueDelegate = new EndOperationDelegate(this.OnEndputStockValue);
            }
            if ((this.onputStockValueCompletedDelegate == null)) {
                this.onputStockValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnputStockValueCompleted);
            }
            base.InvokeAsync(this.onBeginputStockValueDelegate, new object[] {
                        strSymbol}, this.onEndputStockValueDelegate, this.onputStockValueCompletedDelegate, userState);
        }
        
        public double dumpStockValue(string strSymbol) {
            return base.Channel.dumpStockValue(strSymbol);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegindumpStockValue(string strSymbol, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegindumpStockValue(strSymbol, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EnddumpStockValue(System.IAsyncResult result) {
            return base.Channel.EnddumpStockValue(result);
        }
        
        private System.IAsyncResult OnBegindumpStockValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strSymbol = ((string)(inValues[0]));
            return this.BegindumpStockValue(strSymbol, callback, asyncState);
        }
        
        private object[] OnEnddumpStockValue(System.IAsyncResult result) {
            double retVal = this.EnddumpStockValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OndumpStockValueCompleted(object state) {
            if ((this.dumpStockValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.dumpStockValueCompleted(this, new dumpStockValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void dumpStockValueAsync(string strSymbol) {
            this.dumpStockValueAsync(strSymbol, null);
        }
        
        public void dumpStockValueAsync(string strSymbol, object userState) {
            if ((this.onBegindumpStockValueDelegate == null)) {
                this.onBegindumpStockValueDelegate = new BeginOperationDelegate(this.OnBegindumpStockValue);
            }
            if ((this.onEnddumpStockValueDelegate == null)) {
                this.onEnddumpStockValueDelegate = new EndOperationDelegate(this.OnEnddumpStockValue);
            }
            if ((this.ondumpStockValueCompletedDelegate == null)) {
                this.ondumpStockValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OndumpStockValueCompleted);
            }
            base.InvokeAsync(this.onBegindumpStockValueDelegate, new object[] {
                        strSymbol}, this.onEnddumpStockValueDelegate, this.ondumpStockValueCompletedDelegate, userState);
        }
    }
}
